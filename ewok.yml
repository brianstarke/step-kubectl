build:
    box:
      id: alpine
      cmd: /bin/sh
    steps:
       # - shellcheck
        - script:
            name: install apk packages
            code: apk update && apk add ca-certificates openssh curl

        - script:
            name: config
            code: |
                GCLOUD_VERSION="151.0.1-linux-x86_64"
                export GCLOUD_DIRNAME="google-cloud-sdk"
                export KUBERNETES_VERSION="1.6.1"
                export KUBERNETES_SHA256="21e85cd3388b131fd1b63b06ea7ace8eef9555b7c558900b0cf1f9a3f2733e9a"
                export GCLOUD_SHA="26b84898bc7834664f02b713fd73c7787e62827d2d486f58314cdf1f6f6c56bb"
                export GCLOUD_FILENAME="${GCLOUD_DIRNAME}-${GCLOUD_VERSION}.tar.gz"
                export GCLOUD_URL="https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/${GCLOUD_FILENAME}"
                echo "Installing version $KUBERNETES_VERSION of kubernetes and ${GCLOUD_VERSION} of the Google Cloud SDK"

        - script:
            name: fetch kubernetes archive
            code: |
                curl -L https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl > $WERCKER_OUTPUT_DIR/kubectl

        - script:
            name: validate kubernetes archive
            code: |
                cat $WERCKER_OUTPUT_DIR/kubectl| sha256sum | grep -q "$KUBERNETES_SHA256"

        - script:
            name: Fetch gcloud archive
            code: |
                curl -L ${GCLOUD_URL} -o ${GCLOUD_FILENAME}

        - script:
            name: Validate gcloud archive
            code: |
                sha1sum ${GCLOUD_FILENAME} | grep -q "${GCLOUD_SHA}"

        - script:
            name: Extract gcloud archive
            code: |
                tar -xzf ${GCLOUD_FILENAME}

        - script:
            name: Install kubectl gcloud component
            code: |
                yes | ${GCLOUD_DIRNAME}/bin/gcloud components install kubectl

        - script:
            name: Copy gcloud to output dir
            code: |
                cp -r "${GCLOUD_DIRNAME}" ${WERCKER_OUTPUT_DIR}

        - script:
            name: prepare output
            code: |
                cp  "${WERCKER_ROOT}/LICENSE" "${WERCKER_ROOT}/README.md" "${WERCKER_ROOT}/run.sh" "${WERCKER_ROOT}/wercker.yml" "${WERCKER_ROOT}/wercker-step.yml" "$WERCKER_OUTPUT_DIR"
                chmod ugo+rx "$WERCKER_OUTPUT_DIR/${GCLOUD_DIRNAME}/bin/gcloud"
                chmod ugo+rx "$WERCKER_OUTPUT_DIR/kubectl"

test-busybox:
    box:
      id: busybox
      cmd: /bin/sh
    steps:
      - script:
          code: |
              export WERCKER_KUBECTL_COMMAND="version --client"
              export WERCKER_STEP_ROOT=$WERCKER_SOURCE_DIR
              source run.sh

test-alpine:
    box:
      id: alpine
      cmd: /bin/sh
    steps:
      - script:
          code: |
              export WERCKER_KUBECTL_COMMAND="version --client"
              export WERCKER_STEP_ROOT=$WERCKER_SOURCE_DIR
              source run.sh

test-debian:
    box: debian
    steps:
      - script:
          code: |
              export WERCKER_KUBECTL_COMMAND="version --client"
              export WERCKER_STEP_ROOT=$WERCKER_SOURCE_DIR
              source run.sh
